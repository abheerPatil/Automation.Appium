<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="2" ignored="0" total="25" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="616801" started-at="2018-10-04T07:18:39Z" finished-at="2018-10-04T07:28:56Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="616801" started-at="2018-10-04T07:18:39Z" finished-at="2018-10-04T07:28:56Z">
      <class name="testModules.LoginTests">
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5732" started-at="2018-10-04T07:18:43Z" finished-at="2018-10-04T07:18:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.loginElementsDisplay()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loginElementsDisplay()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="loginElementsDisplay" duration-ms="7257" started-at="2018-10-04T07:18:48Z" finished-at="2018-10-04T07:18:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginElementsDisplay -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5572" started-at="2018-10-04T07:18:57Z" finished-at="2018-10-04T07:19:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.stringVisiblity(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="stringVisiblity(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="stringVisiblity" duration-ms="9462" started-at="2018-10-04T07:19:03Z" data-provider="data" finished-at="2018-10-04T07:19:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringVisiblity -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5756" started-at="2018-10-04T07:19:12Z" finished-at="2018-10-04T07:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.forgotPasswordPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="forgotPasswordPage()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="forgotPasswordPage" duration-ms="15457" started-at="2018-10-04T07:19:18Z" finished-at="2018-10-04T07:19:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordPage -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="6896" started-at="2018-10-04T07:19:34Z" finished-at="2018-10-04T07:19:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.forgotPasswordCancel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="forgotPasswordCancel()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="forgotPasswordCancel" duration-ms="1291" started-at="2018-10-04T07:19:41Z" finished-at="2018-10-04T07:19:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordCancel -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5703" started-at="2018-10-04T07:19:42Z" finished-at="2018-10-04T07:19:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="TermsAndCondLink()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="TermsAndCondLink" duration-ms="8676" started-at="2018-10-04T07:19:48Z" finished-at="2018-10-04T07:19:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondLink -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="6427" started-at="2018-10-04T07:19:56Z" finished-at="2018-10-04T07:20:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondOff()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="TermsAndCondOff()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="TermsAndCondOff" duration-ms="17267" started-at="2018-10-04T07:20:03Z" finished-at="2018-10-04T07:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondOff -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5380" started-at="2018-10-04T07:20:20Z" finished-at="2018-10-04T07:20:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noUserAndPass()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noUserAndPass()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="noUserAndPass" duration-ms="7878" started-at="2018-10-04T07:20:25Z" finished-at="2018-10-04T07:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUserAndPass -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5318" started-at="2018-10-04T07:20:34Z" finished-at="2018-10-04T07:20:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noUsername(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noUsername(java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="noUsername" duration-ms="6065" started-at="2018-10-04T07:20:39Z" data-provider="data" finished-at="2018-10-04T07:20:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUsername -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="7017" started-at="2018-10-04T07:20:46Z" finished-at="2018-10-04T07:20:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noPassword(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noPassword(java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="noPassword" duration-ms="7073" started-at="2018-10-04T07:20:53Z" data-provider="data" finished-at="2018-10-04T07:21:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noPassword -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="6123" started-at="2018-10-04T07:21:01Z" finished-at="2018-10-04T07:21:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongUsername(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongUsername(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="wrongUsername" duration-ms="14020" started-at="2018-10-04T07:21:07Z" data-provider="data" finished-at="2018-10-04T07:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongUsername -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="6788" started-at="2018-10-04T07:21:22Z" finished-at="2018-10-04T07:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="wrongPassword(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="wrongPassword" duration-ms="25936" started-at="2018-10-04T07:21:28Z" data-provider="data" finished-at="2018-10-04T07:21:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.wrongPassword(LoginTests.java:267)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongPassword -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5910" started-at="2018-10-04T07:21:55Z" finished-at="2018-10-04T07:22:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongPassword(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="wrongPassword" duration-ms="13393" started-at="2018-10-04T07:22:01Z" data-provider="data" finished-at="2018-10-04T07:22:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongPassword -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="6309" started-at="2018-10-04T07:22:14Z" finished-at="2018-10-04T07:22:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongUserAndPass(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongUserAndPass(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="wrongUserAndPass" duration-ms="13466" started-at="2018-10-04T07:22:21Z" data-provider="data" finished-at="2018-10-04T07:22:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[@##$%%^^^]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[##$%^^&&&]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongUserAndPass -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="6090" started-at="2018-10-04T07:22:35Z" finished-at="2018-10-04T07:22:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.passwordInCaps(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="passwordInCaps(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="passwordInCaps" duration-ms="54334" started-at="2018-10-04T07:22:41Z" data-provider="data" finished-at="2018-10-04T07:23:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HVAVC2]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Can't locate an element by this strategy: By.chained({By.AccessibilityId: Log Out})]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.AccessibilityId: Log Out})
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:126)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:60)
at io.appium.java_client.ios.IOSElement$$EnhancerByCGLIB$$d311658.click(<generated>)
at testModules.LoginTests.passwordInCaps(LoginTests.java:312)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@28a6301f (tried for 1 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:303)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
... 28 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.AccessibilityId: Log Out})
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KiwiTechs-Mac-mini-4.local', ip: 'fe80:0:0:0:1423:5526:68df:60db%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.3', java.version: '1.8.0_162'
Driver info: driver.version: IOSDriver
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordInCaps -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="21074" started-at="2018-10-04T07:23:35Z" finished-at="2018-10-04T07:23:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.passwordInCaps(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="passwordInCaps(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="passwordInCaps" duration-ms="36882" started-at="2018-10-04T07:23:56Z" data-provider="data" finished-at="2018-10-04T07:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HVAVC2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.passwordInCaps(LoginTests.java:313)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordInCaps -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5906" started-at="2018-10-04T07:24:34Z" finished-at="2018-10-04T07:24:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.passwordInCaps(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="passwordInCaps(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="passwordInCaps" duration-ms="39679" started-at="2018-10-04T07:24:40Z" data-provider="data" finished-at="2018-10-04T07:25:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HVAVC2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.passwordInCaps(LoginTests.java:313)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordInCaps -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5253" started-at="2018-10-04T07:25:19Z" finished-at="2018-10-04T07:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.dismissKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="dismissKeyboard()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="dismissKeyboard" duration-ms="2486" started-at="2018-10-04T07:25:25Z" finished-at="2018-10-04T07:25:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.dismissKeyboard(LoginTests.java:333)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dismissKeyboard -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5781" started-at="2018-10-04T07:25:27Z" finished-at="2018-10-04T07:25:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.dismissKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="dismissKeyboard()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="dismissKeyboard" duration-ms="2989" started-at="2018-10-04T07:25:33Z" finished-at="2018-10-04T07:25:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.dismissKeyboard(LoginTests.java:333)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dismissKeyboard -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="6417" started-at="2018-10-04T07:25:36Z" finished-at="2018-10-04T07:25:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.dismissKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="dismissKeyboard()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="dismissKeyboard" duration-ms="1950" started-at="2018-10-04T07:25:42Z" finished-at="2018-10-04T07:25:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.dismissKeyboard(LoginTests.java:333)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dismissKeyboard -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5670" started-at="2018-10-04T07:25:45Z" finished-at="2018-10-04T07:25:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.positiveLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="positiveLogin(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="positiveLogin" duration-ms="32394" started-at="2018-10-04T07:25:50Z" data-provider="data" finished-at="2018-10-04T07:26:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.positiveLogin(LoginTests.java:353)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="12002" started-at="2018-10-04T07:26:23Z" finished-at="2018-10-04T07:26:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.positiveLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="positiveLogin(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="positiveLogin" duration-ms="22293" started-at="2018-10-04T07:26:35Z" data-provider="data" finished-at="2018-10-04T07:26:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-10-04T07:26:57Z" finished-at="2018-10-04T07:26:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.checkLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkLogin()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="checkLogin" duration-ms="8496" started-at="2018-10-04T07:26:57Z" finished-at="2018-10-04T07:27:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="12785" started-at="2018-10-04T07:27:06Z" finished-at="2018-10-04T07:27:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.logOutUsernameCheck(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="logOutUsernameCheck(java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="logOutUsernameCheck" duration-ms="1052" started-at="2018-10-04T07:27:19Z" data-provider="data" finished-at="2018-10-04T07:27:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutUsernameCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5285" started-at="2018-10-04T07:27:20Z" finished-at="2018-10-04T07:27:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.offlineLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineLogin(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="offlineLogin" duration-ms="37906" started-at="2018-10-04T07:27:26Z" data-provider="data" finished-at="2018-10-04T07:28:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="beforeTest" is-config="true" duration-ms="5603" started-at="2018-10-04T07:28:04Z" finished-at="2018-10-04T07:28:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.offlineLoginDiffUser(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineLoginDiffUser(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="offlineLoginDiffUser" duration-ms="23678" started-at="2018-10-04T07:28:10Z" data-provider="data" finished-at="2018-10-04T07:28:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineLoginDiffUser -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testModules.LoginTests@30b6ffe0]" name="afterClass" is-config="true" duration-ms="22934" started-at="2018-10-04T07:28:33Z" finished-at="2018-10-04T07:28:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testModules.LoginTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
