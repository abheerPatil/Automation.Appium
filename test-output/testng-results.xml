<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="7" failed="4" ignored="0" total="107" passed="96">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="5184826" started-at="2018-10-10T12:43:28Z" finished-at="2018-10-10T14:09:53Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="5184826" started-at="2018-10-10T12:43:28Z" finished-at="2018-10-10T14:09:53Z">
      <class name="testModules.LoginTests">
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="5331" started-at="2018-10-10T12:43:30Z" finished-at="2018-10-10T12:43:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.loginElementsDisplay()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loginElementsDisplay()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="loginElementsDisplay" duration-ms="5970" started-at="2018-10-10T12:43:35Z" finished-at="2018-10-10T12:43:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginElementsDisplay -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="6222" started-at="2018-10-10T12:43:43Z" finished-at="2018-10-10T12:43:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.stringVisiblity(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="stringVisiblity(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="stringVisiblity" duration-ms="9880" started-at="2018-10-10T12:43:49Z" data-provider="data" finished-at="2018-10-10T12:43:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringVisiblity -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="6522" started-at="2018-10-10T12:43:59Z" finished-at="2018-10-10T12:44:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.forgotPasswordPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="forgotPasswordPage()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="forgotPasswordPage" duration-ms="17005" started-at="2018-10-10T12:44:06Z" finished-at="2018-10-10T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordPage -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="5505" started-at="2018-10-10T12:44:23Z" finished-at="2018-10-10T12:44:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.forgotPasswordCancel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="forgotPasswordCancel()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="forgotPasswordCancel" duration-ms="1451" started-at="2018-10-10T12:44:28Z" finished-at="2018-10-10T12:44:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordCancel -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="6106" started-at="2018-10-10T12:44:29Z" finished-at="2018-10-10T12:44:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="TermsAndCondLink()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="TermsAndCondLink" duration-ms="13462" started-at="2018-10-10T12:44:36Z" finished-at="2018-10-10T12:44:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondLink -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="7238" started-at="2018-10-10T12:44:49Z" finished-at="2018-10-10T12:44:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondOff()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="TermsAndCondOff()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="TermsAndCondOff" duration-ms="44216" started-at="2018-10-10T12:44:56Z" finished-at="2018-10-10T12:45:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.TermsAndCondOff(LoginTests.java:165)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondOff -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9138" started-at="2018-10-10T12:45:41Z" finished-at="2018-10-10T12:45:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondOff()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="TermsAndCondOff()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="TermsAndCondOff" duration-ms="45264" started-at="2018-10-10T12:45:50Z" finished-at="2018-10-10T12:46:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.TermsAndCondOff(LoginTests.java:165)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondOff -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="7531" started-at="2018-10-10T12:46:35Z" finished-at="2018-10-10T12:46:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noUserAndPass()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noUserAndPass()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="noUserAndPass" duration-ms="22846" started-at="2018-10-10T12:46:42Z" finished-at="2018-10-10T12:47:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUserAndPass -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="6019" started-at="2018-10-10T12:47:06Z" finished-at="2018-10-10T12:47:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noUsername(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noUsername(java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="noUsername" duration-ms="6974" started-at="2018-10-10T12:47:12Z" data-provider="data" finished-at="2018-10-10T12:47:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUsername -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="6979" started-at="2018-10-10T12:47:20Z" finished-at="2018-10-10T12:47:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noPassword(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noPassword(java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="noPassword" duration-ms="7523" started-at="2018-10-10T12:47:27Z" data-provider="data" finished-at="2018-10-10T12:47:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noPassword -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="6080" started-at="2018-10-10T12:47:36Z" finished-at="2018-10-10T12:47:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongUsername(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongUsername(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="wrongUsername" duration-ms="9668" started-at="2018-10-10T12:47:42Z" data-provider="data" finished-at="2018-10-10T12:47:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongUsername -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="5305" started-at="2018-10-10T12:47:52Z" finished-at="2018-10-10T12:47:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongPassword(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="wrongPassword" duration-ms="13461" started-at="2018-10-10T12:47:57Z" data-provider="data" finished-at="2018-10-10T12:48:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongPassword -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="5831" started-at="2018-10-10T12:48:11Z" finished-at="2018-10-10T12:48:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongUserAndPass(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongUserAndPass(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="wrongUserAndPass" duration-ms="10795" started-at="2018-10-10T12:48:17Z" data-provider="data" finished-at="2018-10-10T12:48:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[@##$%%^^^]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[##$%^^&&&]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongUserAndPass -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="5067" started-at="2018-10-10T12:48:28Z" finished-at="2018-10-10T12:48:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.passwordInCaps(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="passwordInCaps(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="passwordInCaps" duration-ms="42440" started-at="2018-10-10T12:48:33Z" data-provider="data" finished-at="2018-10-10T12:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HVAVC2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.passwordInCaps(LoginTests.java:313)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordInCaps -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="6964" started-at="2018-10-10T12:49:17Z" finished-at="2018-10-10T12:49:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.passwordInCaps(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="passwordInCaps(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="passwordInCaps" duration-ms="68155" started-at="2018-10-10T12:49:24Z" data-provider="data" finished-at="2018-10-10T12:50:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HVAVC2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.passwordInCaps(LoginTests.java:313)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordInCaps -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="8301" started-at="2018-10-10T12:50:32Z" finished-at="2018-10-10T12:50:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.dismissKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="dismissKeyboard()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="dismissKeyboard" duration-ms="8671" started-at="2018-10-10T12:50:40Z" finished-at="2018-10-10T12:50:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.dismissKeyboard(LoginTests.java:333)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dismissKeyboard -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="7096" started-at="2018-10-10T12:50:49Z" finished-at="2018-10-10T12:50:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.dismissKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="dismissKeyboard()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="dismissKeyboard" duration-ms="10159" started-at="2018-10-10T12:50:56Z" finished-at="2018-10-10T12:51:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.dismissKeyboard(LoginTests.java:333)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dismissKeyboard -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="7621" started-at="2018-10-10T12:51:06Z" finished-at="2018-10-10T12:51:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.positiveLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="positiveLogin(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="positiveLogin" duration-ms="33009" started-at="2018-10-10T12:51:14Z" data-provider="data" finished-at="2018-10-10T12:51:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveLogin -->
        <test-method status="PASS" signature="checkLogin()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="checkLogin" duration-ms="7116" started-at="2018-10-10T12:51:47Z" finished-at="2018-10-10T12:51:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-10-10T12:51:47Z" finished-at="2018-10-10T12:51:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.checkLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="19691" started-at="2018-10-10T12:51:55Z" finished-at="2018-10-10T12:52:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.logOutUsernameCheck(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="logOutUsernameCheck(java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="logOutUsernameCheck" duration-ms="4028" started-at="2018-10-10T12:52:14Z" data-provider="data" finished-at="2018-10-10T12:52:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutUsernameCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="7425" started-at="2018-10-10T12:52:19Z" finished-at="2018-10-10T12:52:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.offlineLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineLogin(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="offlineLogin" duration-ms="86078" started-at="2018-10-10T12:52:26Z" data-provider="data" finished-at="2018-10-10T12:53:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="7952" started-at="2018-10-10T12:53:53Z" finished-at="2018-10-10T12:54:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.offlineLoginDiffUser(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineLoginDiffUser(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="offlineLoginDiffUser" duration-ms="56561" started-at="2018-10-10T12:54:00Z" data-provider="data" finished-at="2018-10-10T12:54:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineLoginDiffUser -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testModules.LoginTests@51a9ad5e]" name="afterClass" is-config="true" duration-ms="49633" started-at="2018-10-10T12:54:57Z" finished-at="2018-10-10T12:55:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testModules.LoginTests -->
      <class name="testModules.Comparables_Redbell">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeClass" is-config="true" duration-ms="19107" started-at="2018-10-10T13:58:03Z" finished-at="2018-10-10T13:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5805" started-at="2018-10-10T13:58:22Z" finished-at="2018-10-10T13:58:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="comparablesCount()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="comparablesCount" duration-ms="5707" started-at="2018-10-10T13:58:28Z" finished-at="2018-10-10T13:58:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.Comparables_Redbell.comparablesCount(Comparables_Redbell.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- comparablesCount -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5388" started-at="2018-10-10T13:58:34Z" finished-at="2018-10-10T13:58:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="comparablesCount()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="comparablesCount" duration-ms="64472" started-at="2018-10-10T13:58:39Z" finished-at="2018-10-10T13:59:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- comparablesCount -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="6344" started-at="2018-10-10T13:59:43Z" finished-at="2018-10-10T13:59:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectedComparables()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="selectedComparables" duration-ms="20749" started-at="2018-10-10T13:59:50Z" finished-at="2018-10-10T14:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectedComparables -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="6689" started-at="2018-10-10T14:00:11Z" finished-at="2018-10-10T14:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="atMostFour()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="atMostFour" duration-ms="89161" started-at="2018-10-10T14:00:17Z" finished-at="2018-10-10T14:01:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- atMostFour -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5561" started-at="2018-10-10T14:01:46Z" finished-at="2018-10-10T14:01:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="costPerSqFt()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="costPerSqFt" duration-ms="39606" started-at="2018-10-10T14:01:52Z" finished-at="2018-10-10T14:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- costPerSqFt -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5405" started-at="2018-10-10T14:02:32Z" finished-at="2018-10-10T14:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="editFields()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="editFields" duration-ms="64882" started-at="2018-10-10T14:02:37Z" finished-at="2018-10-10T14:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editFields -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="6083" started-at="2018-10-10T14:03:42Z" finished-at="2018-10-10T14:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="scrolling()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="scrolling" duration-ms="43605" started-at="2018-10-10T14:03:48Z" finished-at="2018-10-10T14:04:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrolling -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5402" started-at="2018-10-10T14:04:32Z" finished-at="2018-10-10T14:04:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="comparablesObjects()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="comparablesObjects" duration-ms="41424" started-at="2018-10-10T14:04:37Z" finished-at="2018-10-10T14:05:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- comparablesObjects -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5350" started-at="2018-10-10T14:05:18Z" finished-at="2018-10-10T14:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="subjectProp()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="subjectProp" duration-ms="35008" started-at="2018-10-10T14:05:24Z" finished-at="2018-10-10T14:05:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subjectProp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5868" started-at="2018-10-10T14:05:59Z" finished-at="2018-10-10T14:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="noCountTwice()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="noCountTwice" duration-ms="6901" started-at="2018-10-10T14:06:05Z" finished-at="2018-10-10T14:06:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noCountTwice -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5423" started-at="2018-10-10T14:06:11Z" finished-at="2018-10-10T14:06:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="notPopulated()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="notPopulated" duration-ms="23712" started-at="2018-10-10T14:06:17Z" finished-at="2018-10-10T14:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notPopulated -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5400" started-at="2018-10-10T14:06:41Z" finished-at="2018-10-10T14:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="acMenu()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="acMenu" duration-ms="29533" started-at="2018-10-10T14:06:46Z" finished-at="2018-10-10T14:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acMenu -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5642" started-at="2018-10-10T14:07:16Z" finished-at="2018-10-10T14:07:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="exteriorStyleMenu()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="exteriorStyleMenu" duration-ms="40918" started-at="2018-10-10T14:07:21Z" finished-at="2018-10-10T14:08:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exteriorStyleMenu -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="6466" started-at="2018-10-10T14:08:02Z" finished-at="2018-10-10T14:08:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="reCalculateAvg()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="reCalculateAvg" duration-ms="19463" started-at="2018-10-10T14:08:09Z" finished-at="2018-10-10T14:08:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reCalculateAvg -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="6626" started-at="2018-10-10T14:08:28Z" finished-at="2018-10-10T14:08:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="screenOrganised()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="screenOrganised" duration-ms="17486" started-at="2018-10-10T14:08:35Z" finished-at="2018-10-10T14:08:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenOrganised -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="5820" started-at="2018-10-10T14:08:52Z" finished-at="2018-10-10T14:08:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="countTwice()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="countTwice" duration-ms="17289" started-at="2018-10-10T14:08:58Z" finished-at="2018-10-10T14:09:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- countTwice -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="beforeMethod" is-config="true" duration-ms="6800" started-at="2018-10-10T14:09:15Z" finished-at="2018-10-10T14:09:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="reportSupplied()[pri:0, instance:testModules.Comparables_Redbell@3fce8fd9]" name="reportSupplied" duration-ms="30839" started-at="2018-10-10T14:09:22Z" finished-at="2018-10-10T14:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportSupplied -->
      </class> <!-- testModules.Comparables_Redbell -->
      <class name="testModules.HomeScreenTests">
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="3779" started-at="2018-10-10T12:55:47Z" finished-at="2018-10-10T12:55:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.checkHomeElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkHomeElements()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="checkHomeElements" duration-ms="4382" started-at="2018-10-10T12:55:50Z" finished-at="2018-10-10T12:55:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHomeElements -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="847" started-at="2018-10-10T12:55:55Z" finished-at="2018-10-10T12:55:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.propertiesInView()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="propertiesInView()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="propertiesInView" duration-ms="61717" started-at="2018-10-10T12:55:56Z" finished-at="2018-10-10T12:56:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertiesInView -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="2002" started-at="2018-10-10T12:56:57Z" finished-at="2018-10-10T12:56:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.menuBtnCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="menuBtnCheck()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="menuBtnCheck" duration-ms="4009" started-at="2018-10-10T12:56:59Z" finished-at="2018-10-10T12:57:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.HomeScreenTests.menuBtnCheck(HomeScreenTests.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBtnCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="983" started-at="2018-10-10T12:57:03Z" finished-at="2018-10-10T12:57:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.menuBtnCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="menuBtnCheck()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="menuBtnCheck" duration-ms="5319" started-at="2018-10-10T12:57:04Z" finished-at="2018-10-10T12:57:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.HomeScreenTests.menuBtnCheck(HomeScreenTests.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBtnCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="931" started-at="2018-10-10T12:57:10Z" finished-at="2018-10-10T12:57:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.menuCloseOutside()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="menuCloseOutside()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="menuCloseOutside" duration-ms="7560" started-at="2018-10-10T12:57:11Z" finished-at="2018-10-10T12:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCloseOutside -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="851" started-at="2018-10-10T12:57:18Z" finished-at="2018-10-10T12:57:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.navDrawerScroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="navDrawerScroll()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="navDrawerScroll" duration-ms="51363" started-at="2018-10-10T12:57:19Z" finished-at="2018-10-10T12:58:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navDrawerScroll -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="4735" started-at="2018-10-10T12:58:10Z" finished-at="2018-10-10T12:58:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.navDrawerFolders()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="navDrawerFolders()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="navDrawerFolders" duration-ms="102546" started-at="2018-10-10T12:58:15Z" finished-at="2018-10-10T12:59:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navDrawerFolders -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="5257" started-at="2018-10-10T12:59:58Z" finished-at="2018-10-10T13:00:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.folderState()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="folderState()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="folderState" duration-ms="94332" started-at="2018-10-10T13:00:03Z" finished-at="2018-10-10T13:01:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- folderState -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="5100" started-at="2018-10-10T13:01:37Z" finished-at="2018-10-10T13:01:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.propertyPhases()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="propertyPhases()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="propertyPhases" duration-ms="35470" started-at="2018-10-10T13:01:42Z" finished-at="2018-10-10T13:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertyPhases -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="4769" started-at="2018-10-10T13:02:18Z" finished-at="2018-10-10T13:02:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.autoSelectedPhases()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="autoSelectedPhases()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="autoSelectedPhases" duration-ms="30878" started-at="2018-10-10T13:02:23Z" finished-at="2018-10-10T13:02:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- autoSelectedPhases -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="4915" started-at="2018-10-10T13:02:54Z" finished-at="2018-10-10T13:02:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.propertyPhasesNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="propertyPhasesNumber()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="propertyPhasesNumber" duration-ms="40224" started-at="2018-10-10T13:02:58Z" finished-at="2018-10-10T13:03:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertyPhasesNumber -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="4834" started-at="2018-10-10T13:03:39Z" finished-at="2018-10-10T13:03:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.filterOnProperty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="filterOnProperty()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="filterOnProperty" duration-ms="250971" started-at="2018-10-10T13:03:43Z" finished-at="2018-10-10T13:07:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterOnProperty -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="5073" started-at="2018-10-10T13:07:54Z" finished-at="2018-10-10T13:08:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.loanPhases()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loanPhases()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="loanPhases" duration-ms="61708" started-at="2018-10-10T13:08:00Z" finished-at="2018-10-10T13:09:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanPhases -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="4560" started-at="2018-10-10T13:09:01Z" finished-at="2018-10-10T13:09:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.filterOnLoan()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="filterOnLoan()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="filterOnLoan" duration-ms="107836" started-at="2018-10-10T13:09:06Z" finished-at="2018-10-10T13:10:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterOnLoan -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="4702" started-at="2018-10-10T13:10:54Z" finished-at="2018-10-10T13:10:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.dateAdded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="dateAdded()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="dateAdded" duration-ms="49070" started-at="2018-10-10T13:10:58Z" finished-at="2018-10-10T13:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateAdded -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="5434" started-at="2018-10-10T13:11:47Z" finished-at="2018-10-10T13:11:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.oneFilterOnly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="oneFilterOnly()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="oneFilterOnly" duration-ms="38515" started-at="2018-10-10T13:11:53Z" finished-at="2018-10-10T13:12:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oneFilterOnly -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="941" started-at="2018-10-10T13:12:31Z" finished-at="2018-10-10T13:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.team()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="team()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="team" duration-ms="49761" started-at="2018-10-10T13:12:32Z" finished-at="2018-10-10T13:13:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- team -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="985" started-at="2018-10-10T13:13:22Z" finished-at="2018-10-10T13:13:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.closeAndOpenCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="closeAndOpenCheck()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="closeAndOpenCheck" duration-ms="161496" started-at="2018-10-10T13:13:23Z" finished-at="2018-10-10T13:16:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAndOpenCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="6180" started-at="2018-10-10T13:16:05Z" finished-at="2018-10-10T13:16:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.settingsHeader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="settingsHeader()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="settingsHeader" duration-ms="75384" started-at="2018-10-10T13:16:11Z" finished-at="2018-10-10T13:17:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- settingsHeader -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="beforeTest" is-config="true" duration-ms="5742" started-at="2018-10-10T13:17:26Z" finished-at="2018-10-10T13:17:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.logOut()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="logOut()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="logOut" duration-ms="29965" started-at="2018-10-10T13:17:32Z" finished-at="2018-10-10T13:18:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOut -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testModules.HomeScreenTests@5f20155b]" name="afterClass" is-config="true" duration-ms="51574" started-at="2018-10-10T13:18:02Z" finished-at="2018-10-10T13:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testModules.HomeScreenTests -->
      <class name="testModules.Property_HouseDetailsTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeClass" is-config="true" duration-ms="21094" started-at="2018-10-10T13:33:57Z" finished-at="2018-10-10T13:34:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="projectNameOnTop(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="projectNameOnTop" duration-ms="1365" started-at="2018-10-10T13:34:19Z" data-provider="data" finished-at="2018-10-10T13:34:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Project 1925 Pensione Pl]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- projectNameOnTop -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-10-10T13:34:19Z" finished-at="2018-10-10T13:34:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.projectNameOnTop(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-10-10T13:34:21Z" finished-at="2018-10-10T13:34:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDetailsBtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDetailsBtn()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="houseDetailsBtn" duration-ms="12368" started-at="2018-10-10T13:34:21Z" finished-at="2018-10-10T13:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDetailsBtn -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="12736" started-at="2018-10-10T13:34:33Z" finished-at="2018-10-10T13:34:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDetailsSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDetailsSelection()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="houseDetailsSelection" duration-ms="3873" started-at="2018-10-10T13:34:46Z" finished-at="2018-10-10T13:34:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDetailsSelection -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="13887" started-at="2018-10-10T13:34:50Z" finished-at="2018-10-10T13:35:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDetailsCell()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDetailsCell()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="houseDetailsCell" duration-ms="4002" started-at="2018-10-10T13:35:04Z" finished-at="2018-10-10T13:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDetailsCell -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9877" started-at="2018-10-10T13:35:08Z" finished-at="2018-10-10T13:35:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.screenSections()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="screenSections()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="screenSections" duration-ms="23873" started-at="2018-10-10T13:35:18Z" finished-at="2018-10-10T13:35:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenSections -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="18817" started-at="2018-10-10T13:35:41Z" finished-at="2018-10-10T13:36:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.checkZillowField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkZillowField()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="checkZillowField" duration-ms="37003" started-at="2018-10-10T13:36:00Z" finished-at="2018-10-10T13:36:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkZillowField -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="20199" started-at="2018-10-10T13:36:37Z" finished-at="2018-10-10T13:36:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDetailsCheckmark()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDetailsCheckmark()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="houseDetailsCheckmark" duration-ms="25764" started-at="2018-10-10T13:36:57Z" finished-at="2018-10-10T13:37:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDetailsCheckmark -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="20667" started-at="2018-10-10T13:37:23Z" finished-at="2018-10-10T13:37:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.zillowText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="zillowText()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="zillowText" duration-ms="2592" started-at="2018-10-10T13:37:44Z" finished-at="2018-10-10T13:37:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zillowText -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="10760" started-at="2018-10-10T13:37:46Z" finished-at="2018-10-10T13:37:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.zillowLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="zillowLogo()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="zillowLogo" duration-ms="26956" started-at="2018-10-10T13:37:57Z" finished-at="2018-10-10T13:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zillowLogo -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="21121" started-at="2018-10-10T13:38:24Z" finished-at="2018-10-10T13:38:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.clickableLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="clickableLogo()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="clickableLogo" duration-ms="59224" started-at="2018-10-10T13:38:45Z" finished-at="2018-10-10T13:39:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickableLogo -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="21925" started-at="2018-10-10T13:39:45Z" finished-at="2018-10-10T13:40:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.offlineBrandingCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineBrandingCheck()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="offlineBrandingCheck" duration-ms="51597" started-at="2018-10-10T13:40:06Z" finished-at="2018-10-10T13:40:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineBrandingCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="22792" started-at="2018-10-10T13:40:59Z" finished-at="2018-10-10T13:41:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addressUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addressUpdate(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="addressUpdate" duration-ms="154417" started-at="2018-10-10T13:41:22Z" data-provider="data" finished-at="2018-10-10T13:43:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[97 Madison Ave]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Island Park]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NY]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11558]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addressUpdate -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="21376" started-at="2018-10-10T13:43:57Z" finished-at="2018-10-10T13:44:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.editZillowFields(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="editZillowFields(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="editZillowFields" duration-ms="108732" started-at="2018-10-10T13:44:19Z" data-provider="data" finished-at="2018-10-10T13:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1936]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editZillowFields -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="11629" started-at="2018-10-10T13:46:09Z" finished-at="2018-10-10T13:46:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addOnField(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addOnField(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="addOnField" duration-ms="13080" started-at="2018-10-10T13:46:21Z" data-provider="data" finished-at="2018-10-10T13:46:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOnField -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="10449" started-at="2018-10-10T13:46:34Z" finished-at="2018-10-10T13:46:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addOnDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addOnDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="addOnDropDown" duration-ms="12238" started-at="2018-10-10T13:46:45Z" data-provider="data" finished-at="2018-10-10T13:46:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOnDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9898" started-at="2018-10-10T13:46:57Z" finished-at="2018-10-10T13:47:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.homeStyleDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="homeStyleDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="homeStyleDropDown" duration-ms="17308" started-at="2018-10-10T13:47:07Z" data-provider="data" finished-at="2018-10-10T13:47:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeStyleDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9933" started-at="2018-10-10T13:47:25Z" finished-at="2018-10-10T13:47:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.exteriorStyleDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="exteriorStyleDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="exteriorStyleDropDown" duration-ms="23100" started-at="2018-10-10T13:47:35Z" data-provider="data" finished-at="2018-10-10T13:47:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exteriorStyleDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9832" started-at="2018-10-10T13:48:00Z" finished-at="2018-10-10T13:48:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.garageSizeDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="garageSizeDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="garageSizeDropDown" duration-ms="12652" started-at="2018-10-10T13:48:09Z" data-provider="data" finished-at="2018-10-10T13:48:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- garageSizeDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9866" started-at="2018-10-10T13:48:23Z" finished-at="2018-10-10T13:48:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.tapGarageCheckBox(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="tapGarageCheckBox(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="tapGarageCheckBox" duration-ms="3618" started-at="2018-10-10T13:48:32Z" data-provider="data" finished-at="2018-10-10T13:48:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[yes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tapGarageCheckBox -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="10157" started-at="2018-10-10T13:48:37Z" finished-at="2018-10-10T13:48:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.garageConversionField(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="garageConversionField(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="garageConversionField" duration-ms="17666" started-at="2018-10-10T13:48:47Z" data-provider="data" finished-at="2018-10-10T13:49:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- garageConversionField -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="14013" started-at="2018-10-10T13:49:05Z" finished-at="2018-10-10T13:49:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.garageConversionDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="garageConversionDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="garageConversionDropDown" duration-ms="13798" started-at="2018-10-10T13:49:19Z" data-provider="data" finished-at="2018-10-10T13:49:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- garageConversionDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9863" started-at="2018-10-10T13:49:33Z" finished-at="2018-10-10T13:49:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.acDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="acDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="acDropDown" duration-ms="12199" started-at="2018-10-10T13:49:43Z" data-provider="data" finished-at="2018-10-10T13:49:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9743" started-at="2018-10-10T13:49:56Z" finished-at="2018-10-10T13:50:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.poolDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="poolDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="poolDropDown" duration-ms="14809" started-at="2018-10-10T13:50:05Z" data-provider="data" finished-at="2018-10-10T13:50:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- poolDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9940" started-at="2018-10-10T13:50:21Z" finished-at="2018-10-10T13:50:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.hotTub(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="hotTub(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="hotTub" duration-ms="13852" started-at="2018-10-10T13:50:31Z" data-provider="data" finished-at="2018-10-10T13:50:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotTub -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9890" started-at="2018-10-10T13:50:45Z" finished-at="2018-10-10T13:50:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.storageBuildingField(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="storageBuildingField(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="storageBuildingField" duration-ms="11661" started-at="2018-10-10T13:50:55Z" data-provider="data" finished-at="2018-10-10T13:51:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storageBuildingField -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="21816" started-at="2018-10-10T13:51:08Z" finished-at="2018-10-10T13:51:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.storageBuildingDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="storageBuildingDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="storageBuildingDropDown" duration-ms="33450" started-at="2018-10-10T13:51:29Z" data-provider="data" finished-at="2018-10-10T13:52:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storageBuildingDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9974" started-at="2018-10-10T13:52:04Z" finished-at="2018-10-10T13:52:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDimensions(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDimensions(java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="houseDimensions" duration-ms="43492" started-at="2018-10-10T13:52:14Z" data-provider="data" finished-at="2018-10-10T13:52:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDimensions -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="13589" started-at="2018-10-10T13:52:57Z" finished-at="2018-10-10T13:53:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addFeature()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addFeature()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="addFeature" duration-ms="31750" started-at="2018-10-10T13:53:11Z" finished-at="2018-10-10T13:53:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFeature -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="10117" started-at="2018-10-10T13:53:43Z" finished-at="2018-10-10T13:53:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addingDataInAmenities(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="addingDataInAmenities(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="addingDataInAmenities" duration-ms="9639" started-at="2018-10-10T13:53:53Z" data-provider="data" finished-at="2018-10-10T13:54:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TRIAL 1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.Property_HouseDetailsTest.addingDataInAmenities(Property_HouseDetailsTest.java:624)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addingDataInAmenities -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="10050" started-at="2018-10-10T13:54:03Z" finished-at="2018-10-10T13:54:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addingDataInAmenities(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addingDataInAmenities(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="addingDataInAmenities" duration-ms="67099" started-at="2018-10-10T13:54:13Z" data-provider="data" finished-at="2018-10-10T13:55:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TRIAL 1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addingDataInAmenities -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9970" started-at="2018-10-10T13:55:21Z" finished-at="2018-10-10T13:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.deleteAmenities(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="deleteAmenities(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="deleteAmenities" duration-ms="38000" started-at="2018-10-10T13:55:31Z" data-provider="data" finished-at="2018-10-10T13:56:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAmenities -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="10907" started-at="2018-10-10T13:56:09Z" finished-at="2018-10-10T13:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.selectPricingProfile(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="selectPricingProfile(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="selectPricingProfile" duration-ms="28894" started-at="2018-10-10T13:56:20Z" data-provider="data" finished-at="2018-10-10T13:56:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPricingProfile -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9807" started-at="2018-10-10T13:56:49Z" finished-at="2018-10-10T13:56:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.safeSize()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="safeSize()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="safeSize" duration-ms="4785" started-at="2018-10-10T13:56:59Z" finished-at="2018-10-10T13:57:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- safeSize -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="9789" started-at="2018-10-10T13:57:04Z" finished-at="2018-10-10T13:57:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.safeSizeInfo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="safeSizeInfo()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="safeSizeInfo" duration-ms="4789" started-at="2018-10-10T13:57:14Z" finished-at="2018-10-10T13:57:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- safeSizeInfo -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="beforeTest" is-config="true" duration-ms="10893" started-at="2018-10-10T13:57:19Z" finished-at="2018-10-10T13:57:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.notesHouseDetails(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="notesHouseDetails(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="notesHouseDetails" duration-ms="24542" started-at="2018-10-10T13:57:30Z" data-provider="data" finished-at="2018-10-10T13:57:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A pangram, or holoalphabetic sentence, is a sentence that contains every letter of the alphabet at least once. The most famous pangram is probably the thirty-five-letter-long “The quick brown fox jumps over the lazy dog,” which has been used to test typing equipment since at least the late 1800s.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notesHouseDetails -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testModules.Property_HouseDetailsTest@239105a8]" name="afterClass" is-config="true" duration-ms="8534" started-at="2018-10-10T13:57:54Z" finished-at="2018-10-10T13:58:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testModules.Property_HouseDetailsTest -->
      <class name="testModules.New_PropertyTests">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="beforeClass" is-config="true" duration-ms="27536" started-at="2018-10-10T13:18:53Z" finished-at="2018-10-10T13:19:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="newPropertyBtn()[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="newPropertyBtn" duration-ms="7952" started-at="2018-10-10T13:19:21Z" finished-at="2018-10-10T13:19:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newPropertyBtn -->
        <test-method status="PASS" signature="newPropertyCheck()[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="newPropertyCheck" duration-ms="16563" started-at="2018-10-10T13:19:29Z" finished-at="2018-10-10T13:19:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newPropertyCheck -->
        <test-method status="PASS" signature="tapPropertyOne()[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="tapPropertyOne" duration-ms="12003" started-at="2018-10-10T13:19:45Z" finished-at="2018-10-10T13:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tapPropertyOne -->
        <test-method status="PASS" signature="sellerPage()[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="sellerPage" duration-ms="74687" started-at="2018-10-10T13:19:57Z" finished-at="2018-10-10T13:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sellerPage -->
        <test-method status="PASS" signature="defaultPhase()[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="defaultPhase" duration-ms="39189" started-at="2018-10-10T13:21:12Z" finished-at="2018-10-10T13:21:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultPhase -->
        <test-method status="PASS" signature="charLimit(java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="charLimit" duration-ms="105860" started-at="2018-10-10T13:21:52Z" data-provider="data" finished-at="2018-10-10T13:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[It  doesn’t  matter  what  type  of  ugly  home  you  have, HomeVestors  would  like  to  make  a  no  obligation  cash  offer  to purchase your home for cash. ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charLimit -->
        <test-method status="PASS" signature="fillingSeller(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="fillingSeller" duration-ms="199179" started-at="2018-10-10T13:23:38Z" data-provider="data" finished-at="2018-10-10T13:26:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Project]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Alfred]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Morrison]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1925 Pensione Pl]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Wenatchee]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[WA]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[98801.0]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[7.183954794E9]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[johncater@hva.com]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Enjoy this home located in Western Heights.Close to schools and downtown.This 4 bedroom, 2 bath has great floor plan ready for your personal touch to decorate.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingSeller -->
        <test-method status="PASS" signature="wrongEmail(java.lang.String)[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="wrongEmail" duration-ms="83598" started-at="2018-10-10T13:26:58Z" data-provider="data" finished-at="2018-10-10T13:28:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sasfdsgsgs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongEmail -->
        <test-method status="PASS" signature="wrongState(java.lang.String)[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="wrongState" duration-ms="64012" started-at="2018-10-10T13:28:22Z" data-provider="data" finished-at="2018-10-10T13:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongState -->
        <test-method status="PASS" signature="editingSeller(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="editingSeller" duration-ms="100053" started-at="2018-10-10T13:29:27Z" data-provider="data" finished-at="2018-10-10T13:31:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 1925 Pensione Pl]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[WA]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[9.836663366E9]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[alfred_morrison@hva.com]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editingSeller -->
        <test-method status="PASS" signature="tileCheck(java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="tileCheck" duration-ms="27022" started-at="2018-10-10T13:31:08Z" data-provider="data" finished-at="2018-10-10T13:31:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Project 1925 Pensione Pl]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1925 Pensione Pl Wenatchee, WA 98801]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tileCheck -->
        <test-method status="SKIP" signature="redBell(java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="redBell" duration-ms="78907" started-at="2018-10-10T13:31:36Z" data-provider="data" finished-at="2018-10-10T13:32:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21844250-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$68.73]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.New_PropertyTests.redBell(New_PropertyTests.java:446)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redBell -->
        <test-method status="PASS" signature="redBell(java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@72ade7e3]" name="redBell" duration-ms="60309" started-at="2018-10-10T13:32:57Z" data-provider="data" finished-at="2018-10-10T13:33:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21844250-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$68.73]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redBell -->
      </class> <!-- testModules.New_PropertyTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
