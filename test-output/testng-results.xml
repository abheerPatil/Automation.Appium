<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="50" passed="47">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1502806" started-at="2018-09-24T10:54:05Z" finished-at="2018-09-24T11:19:08Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="1502806" started-at="2018-09-24T10:54:05Z" finished-at="2018-09-24T11:19:08Z">
      <class name="testModules.LoginTests">
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5382" started-at="2018-09-24T10:54:07Z" finished-at="2018-09-24T10:54:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.loginElementsDisplay()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loginElementsDisplay()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="loginElementsDisplay" duration-ms="4942" started-at="2018-09-24T10:54:12Z" finished-at="2018-09-24T10:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginElementsDisplay -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5365" started-at="2018-09-24T10:54:17Z" finished-at="2018-09-24T10:54:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.stringVisiblity()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="stringVisiblity()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="stringVisiblity" duration-ms="6918" started-at="2018-09-24T10:54:22Z" finished-at="2018-09-24T10:54:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringVisiblity -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5519" started-at="2018-09-24T10:54:29Z" finished-at="2018-09-24T10:54:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.forgotPasswordPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="forgotPasswordPage()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="forgotPasswordPage" duration-ms="16038" started-at="2018-09-24T10:54:35Z" finished-at="2018-09-24T10:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordPage -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5122" started-at="2018-09-24T10:54:51Z" finished-at="2018-09-24T10:54:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.forgotPasswordCancel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="forgotPasswordCancel()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="forgotPasswordCancel" duration-ms="1275" started-at="2018-09-24T10:54:56Z" finished-at="2018-09-24T10:54:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordCancel -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5196" started-at="2018-09-24T10:54:57Z" finished-at="2018-09-24T10:55:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="TermsAndCondLink()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="TermsAndCondLink" duration-ms="8340" started-at="2018-09-24T10:55:03Z" finished-at="2018-09-24T10:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondLink -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="6558" started-at="2018-09-24T10:55:11Z" finished-at="2018-09-24T10:55:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondOff()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="TermsAndCondOff()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="TermsAndCondOff" duration-ms="16943" started-at="2018-09-24T10:55:17Z" finished-at="2018-09-24T10:55:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondOff -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5272" started-at="2018-09-24T10:55:34Z" finished-at="2018-09-24T10:55:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noUserAndPass()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noUserAndPass()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="noUserAndPass" duration-ms="8404" started-at="2018-09-24T10:55:40Z" finished-at="2018-09-24T10:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUserAndPass -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="6711" started-at="2018-09-24T10:55:48Z" finished-at="2018-09-24T10:55:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noUsername()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="noUsername" duration-ms="6104" started-at="2018-09-24T10:55:55Z" finished-at="2018-09-24T10:56:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUsername -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5954" started-at="2018-09-24T10:56:01Z" finished-at="2018-09-24T10:56:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noPassword()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="noPassword" duration-ms="7077" started-at="2018-09-24T10:56:07Z" finished-at="2018-09-24T10:56:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noPassword -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5135" started-at="2018-09-24T10:56:14Z" finished-at="2018-09-24T10:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongUsername()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="wrongUsername" duration-ms="9108" started-at="2018-09-24T10:56:19Z" finished-at="2018-09-24T10:56:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongUsername -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5888" started-at="2018-09-24T10:56:28Z" finished-at="2018-09-24T10:56:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongPassword()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="wrongPassword" duration-ms="9952" started-at="2018-09-24T10:56:34Z" finished-at="2018-09-24T10:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongPassword -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5648" started-at="2018-09-24T10:56:44Z" finished-at="2018-09-24T10:56:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongUserAndPass()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongUserAndPass()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="wrongUserAndPass" duration-ms="12152" started-at="2018-09-24T10:56:50Z" finished-at="2018-09-24T10:57:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongUserAndPass -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5891" started-at="2018-09-24T10:57:02Z" finished-at="2018-09-24T10:57:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.passwordInCaps() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="passwordInCaps()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="passwordInCaps" duration-ms="32522" started-at="2018-09-24T10:57:08Z" finished-at="2018-09-24T10:57:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.passwordInCaps(LoginTests.java:302)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordInCaps -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="6026" started-at="2018-09-24T10:57:40Z" finished-at="2018-09-24T10:57:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.dismissKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="dismissKeyboard()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="dismissKeyboard" duration-ms="2651" started-at="2018-09-24T10:57:46Z" finished-at="2018-09-24T10:57:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.dismissKeyboard(LoginTests.java:322)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dismissKeyboard -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5771" started-at="2018-09-24T10:57:49Z" finished-at="2018-09-24T10:57:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.positiveLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="positiveLogin()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="positiveLogin" duration-ms="20402" started-at="2018-09-24T10:57:55Z" finished-at="2018-09-24T10:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-09-24T10:58:15Z" finished-at="2018-09-24T10:58:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.checkLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkLogin()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="checkLogin" duration-ms="8313" started-at="2018-09-24T10:58:15Z" finished-at="2018-09-24T10:58:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="12073" started-at="2018-09-24T10:58:23Z" finished-at="2018-09-24T10:58:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.logOutUsernameCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="logOutUsernameCheck()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="logOutUsernameCheck" duration-ms="923" started-at="2018-09-24T10:58:35Z" finished-at="2018-09-24T10:58:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutUsernameCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5657" started-at="2018-09-24T10:58:36Z" finished-at="2018-09-24T10:58:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.offlineLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineLogin()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="offlineLogin" duration-ms="37539" started-at="2018-09-24T10:58:42Z" finished-at="2018-09-24T10:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5221" started-at="2018-09-24T10:59:20Z" finished-at="2018-09-24T10:59:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.offlineLoginDiffUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineLoginDiffUser()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="offlineLoginDiffUser" duration-ms="23178" started-at="2018-09-24T10:59:25Z" finished-at="2018-09-24T10:59:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineLoginDiffUser -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="afterClass" is-config="true" duration-ms="22491" started-at="2018-09-24T10:59:48Z" finished-at="2018-09-24T11:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testModules.LoginTests -->
      <class name="testModules.HomeScreenTests">
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1496" started-at="2018-09-24T11:00:10Z" finished-at="2018-09-24T11:00:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.checkHomeElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkHomeElements()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="checkHomeElements" duration-ms="4314" started-at="2018-09-24T11:00:12Z" finished-at="2018-09-24T11:00:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHomeElements -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="825" started-at="2018-09-24T11:00:16Z" finished-at="2018-09-24T11:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.propertiesInView()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="propertiesInView()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="propertiesInView" duration-ms="57298" started-at="2018-09-24T11:00:17Z" finished-at="2018-09-24T11:01:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertiesInView -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="800" started-at="2018-09-24T11:01:14Z" finished-at="2018-09-24T11:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.menuBtnCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="menuBtnCheck()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="menuBtnCheck" duration-ms="2714" started-at="2018-09-24T11:01:15Z" finished-at="2018-09-24T11:01:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.HomeScreenTests.menuBtnCheck(HomeScreenTests.java:119)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBtnCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="907" started-at="2018-09-24T11:01:18Z" finished-at="2018-09-24T11:01:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.menuCloseOutside()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="menuCloseOutside()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="menuCloseOutside" duration-ms="6226" started-at="2018-09-24T11:01:19Z" finished-at="2018-09-24T11:01:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCloseOutside -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="854" started-at="2018-09-24T11:01:25Z" finished-at="2018-09-24T11:01:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.navDrawerScroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="navDrawerScroll()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="navDrawerScroll" duration-ms="33943" started-at="2018-09-24T11:01:26Z" finished-at="2018-09-24T11:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navDrawerScroll -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="940" started-at="2018-09-24T11:02:00Z" finished-at="2018-09-24T11:02:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.navDrawerFolders()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="navDrawerFolders()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="navDrawerFolders" duration-ms="42386" started-at="2018-09-24T11:02:01Z" finished-at="2018-09-24T11:02:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navDrawerFolders -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1232" started-at="2018-09-24T11:02:43Z" finished-at="2018-09-24T11:02:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.folderState()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="folderState()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="folderState" duration-ms="45617" started-at="2018-09-24T11:02:44Z" finished-at="2018-09-24T11:03:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- folderState -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1023" started-at="2018-09-24T11:03:30Z" finished-at="2018-09-24T11:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.propertyPhases()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="propertyPhases()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="propertyPhases" duration-ms="12131" started-at="2018-09-24T11:03:31Z" finished-at="2018-09-24T11:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertyPhases -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1199" started-at="2018-09-24T11:03:43Z" finished-at="2018-09-24T11:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.autoSelectedPhases()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="autoSelectedPhases()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="autoSelectedPhases" duration-ms="12884" started-at="2018-09-24T11:03:44Z" finished-at="2018-09-24T11:03:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- autoSelectedPhases -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1248" started-at="2018-09-24T11:03:57Z" finished-at="2018-09-24T11:03:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.propertyPhasesNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="propertyPhasesNumber()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="propertyPhasesNumber" duration-ms="13838" started-at="2018-09-24T11:03:59Z" finished-at="2018-09-24T11:04:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertyPhasesNumber -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1234" started-at="2018-09-24T11:04:12Z" finished-at="2018-09-24T11:04:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.filterOnProperty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="filterOnProperty()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="filterOnProperty" duration-ms="121872" started-at="2018-09-24T11:04:14Z" finished-at="2018-09-24T11:06:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterOnProperty -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1498" started-at="2018-09-24T11:06:15Z" finished-at="2018-09-24T11:06:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.loanPhases()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loanPhases()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="loanPhases" duration-ms="19710" started-at="2018-09-24T11:06:17Z" finished-at="2018-09-24T11:06:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanPhases -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1018" started-at="2018-09-24T11:06:37Z" finished-at="2018-09-24T11:06:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.filterOnLoan()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="filterOnLoan()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="filterOnLoan" duration-ms="36002" started-at="2018-09-24T11:06:38Z" finished-at="2018-09-24T11:07:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterOnLoan -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1052" started-at="2018-09-24T11:07:14Z" finished-at="2018-09-24T11:07:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.dateAdded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="dateAdded()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="dateAdded" duration-ms="16352" started-at="2018-09-24T11:07:15Z" finished-at="2018-09-24T11:07:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateAdded -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1308" started-at="2018-09-24T11:07:31Z" finished-at="2018-09-24T11:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.oneFilterOnly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="oneFilterOnly()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="oneFilterOnly" duration-ms="31863" started-at="2018-09-24T11:07:32Z" finished-at="2018-09-24T11:08:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oneFilterOnly -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="885" started-at="2018-09-24T11:08:04Z" finished-at="2018-09-24T11:08:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.team()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="team()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="team" duration-ms="28683" started-at="2018-09-24T11:08:05Z" finished-at="2018-09-24T11:08:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- team -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="941" started-at="2018-09-24T11:08:34Z" finished-at="2018-09-24T11:08:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.closeAndOpenCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="closeAndOpenCheck()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="closeAndOpenCheck" duration-ms="79500" started-at="2018-09-24T11:08:35Z" finished-at="2018-09-24T11:09:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAndOpenCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1685" started-at="2018-09-24T11:09:54Z" finished-at="2018-09-24T11:09:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.settingsHeader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="settingsHeader()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="settingsHeader" duration-ms="28657" started-at="2018-09-24T11:09:56Z" finished-at="2018-09-24T11:10:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- settingsHeader -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1282" started-at="2018-09-24T11:10:25Z" finished-at="2018-09-24T11:10:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.logOut()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="logOut()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="logOut" duration-ms="9126" started-at="2018-09-24T11:10:26Z" finished-at="2018-09-24T11:10:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOut -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="afterClass" is-config="true" duration-ms="27438" started-at="2018-09-24T11:10:35Z" finished-at="2018-09-24T11:11:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testModules.HomeScreenTests -->
      <class name="testModules.New_PropertyTests">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="beforeClass" is-config="true" duration-ms="13171" started-at="2018-09-24T11:11:02Z" finished-at="2018-09-24T11:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="newPropertyBtn()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="newPropertyBtn" duration-ms="8761" started-at="2018-09-24T11:11:16Z" finished-at="2018-09-24T11:11:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newPropertyBtn -->
        <test-method status="PASS" signature="newPropertyCheck()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="newPropertyCheck" duration-ms="10728" started-at="2018-09-24T11:11:24Z" finished-at="2018-09-24T11:11:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newPropertyCheck -->
        <test-method status="PASS" signature="tapPropertyOne()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="tapPropertyOne" duration-ms="12389" started-at="2018-09-24T11:11:35Z" finished-at="2018-09-24T11:11:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tapPropertyOne -->
        <test-method status="PASS" signature="sellerPage()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="sellerPage" duration-ms="37811" started-at="2018-09-24T11:11:48Z" finished-at="2018-09-24T11:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sellerPage -->
        <test-method status="PASS" signature="defaultPhase()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="defaultPhase" duration-ms="15894" started-at="2018-09-24T11:12:25Z" finished-at="2018-09-24T11:12:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultPhase -->
        <test-method status="PASS" signature="charLimit()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="charLimit" duration-ms="59036" started-at="2018-09-24T11:12:41Z" finished-at="2018-09-24T11:13:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charLimit -->
        <test-method status="PASS" signature="fillingSeller()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="fillingSeller" duration-ms="109638" started-at="2018-09-24T11:13:40Z" finished-at="2018-09-24T11:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingSeller -->
        <test-method status="PASS" signature="wrongEmail()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="wrongEmail" duration-ms="50701" started-at="2018-09-24T11:15:30Z" finished-at="2018-09-24T11:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongEmail -->
        <test-method status="PASS" signature="wrongState()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="wrongState" duration-ms="48383" started-at="2018-09-24T11:16:21Z" finished-at="2018-09-24T11:17:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongState -->
        <test-method status="PASS" signature="editingSeller()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="editingSeller" duration-ms="59763" started-at="2018-09-24T11:17:09Z" finished-at="2018-09-24T11:18:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editingSeller -->
        <test-method status="PASS" signature="tileCheck()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="tileCheck" duration-ms="15461" started-at="2018-09-24T11:18:09Z" finished-at="2018-09-24T11:18:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tileCheck -->
        <test-method status="PASS" signature="redBell()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="redBell" duration-ms="43682" started-at="2018-09-24T11:18:24Z" finished-at="2018-09-24T11:19:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redBell -->
      </class> <!-- testModules.New_PropertyTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
