<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="4" ignored="0" total="90" passed="80">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="4087734" started-at="2018-10-04T13:54:49Z" finished-at="2018-10-04T15:02:57Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="4087734" started-at="2018-10-04T13:54:49Z" finished-at="2018-10-04T15:02:57Z">
      <class name="testModules.LoginTests">
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5430" started-at="2018-10-04T13:54:51Z" finished-at="2018-10-04T13:54:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.loginElementsDisplay()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loginElementsDisplay()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="loginElementsDisplay" duration-ms="4730" started-at="2018-10-04T13:54:56Z" finished-at="2018-10-04T13:55:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginElementsDisplay -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="7277" started-at="2018-10-04T13:55:03Z" finished-at="2018-10-04T13:55:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.stringVisiblity(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="stringVisiblity(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="stringVisiblity" duration-ms="8544" started-at="2018-10-04T13:55:11Z" data-provider="data" finished-at="2018-10-04T13:55:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringVisiblity -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5650" started-at="2018-10-04T13:55:19Z" finished-at="2018-10-04T13:55:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.forgotPasswordPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="forgotPasswordPage()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="forgotPasswordPage" duration-ms="14889" started-at="2018-10-04T13:55:25Z" finished-at="2018-10-04T13:55:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordPage -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5617" started-at="2018-10-04T13:55:40Z" finished-at="2018-10-04T13:55:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.forgotPasswordCancel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="forgotPasswordCancel()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="forgotPasswordCancel" duration-ms="1356" started-at="2018-10-04T13:55:45Z" finished-at="2018-10-04T13:55:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordCancel -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="7954" started-at="2018-10-04T13:55:47Z" finished-at="2018-10-04T13:55:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="TermsAndCondLink()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="TermsAndCondLink" duration-ms="10614" started-at="2018-10-04T13:55:55Z" finished-at="2018-10-04T13:56:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondLink -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="7786" started-at="2018-10-04T13:56:05Z" finished-at="2018-10-04T13:56:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondOff()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="TermsAndCondOff()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="TermsAndCondOff" duration-ms="31479" started-at="2018-10-04T13:56:13Z" finished-at="2018-10-04T13:56:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.TermsAndCondOff(LoginTests.java:165)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondOff -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="8001" started-at="2018-10-04T13:56:44Z" finished-at="2018-10-04T13:56:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.TermsAndCondOff()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="TermsAndCondOff()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="TermsAndCondOff" duration-ms="39408" started-at="2018-10-04T13:56:52Z" finished-at="2018-10-04T13:57:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.TermsAndCondOff(LoginTests.java:165)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermsAndCondOff -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="7976" started-at="2018-10-04T13:57:32Z" finished-at="2018-10-04T13:57:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noUserAndPass()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noUserAndPass()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="noUserAndPass" duration-ms="17568" started-at="2018-10-04T13:57:40Z" finished-at="2018-10-04T13:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUserAndPass -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5870" started-at="2018-10-04T13:57:59Z" finished-at="2018-10-04T13:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noUsername(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noUsername(java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="noUsername" duration-ms="6611" started-at="2018-10-04T13:58:05Z" data-provider="data" finished-at="2018-10-04T13:58:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUsername -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5131" started-at="2018-10-04T13:58:12Z" finished-at="2018-10-04T13:58:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.noPassword(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="noPassword(java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="noPassword" duration-ms="7519" started-at="2018-10-04T13:58:18Z" data-provider="data" finished-at="2018-10-04T13:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noPassword -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="6987" started-at="2018-10-04T13:58:26Z" finished-at="2018-10-04T13:58:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongUsername(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongUsername(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="wrongUsername" duration-ms="10009" started-at="2018-10-04T13:58:33Z" data-provider="data" finished-at="2018-10-04T13:58:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongUsername -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5779" started-at="2018-10-04T13:58:43Z" finished-at="2018-10-04T13:58:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongPassword(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="wrongPassword" duration-ms="10470" started-at="2018-10-04T13:58:49Z" data-provider="data" finished-at="2018-10-04T13:58:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongPassword -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="6378" started-at="2018-10-04T13:59:00Z" finished-at="2018-10-04T13:59:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.wrongUserAndPass(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="wrongUserAndPass(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="wrongUserAndPass" duration-ms="10742" started-at="2018-10-04T13:59:06Z" data-provider="data" finished-at="2018-10-04T13:59:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[@##$%%^^^]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[##$%^^&&&]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongUserAndPass -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5548" started-at="2018-10-04T13:59:17Z" finished-at="2018-10-04T13:59:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.passwordInCaps(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="passwordInCaps(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="passwordInCaps" duration-ms="39134" started-at="2018-10-04T13:59:23Z" data-provider="data" finished-at="2018-10-04T14:00:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HVAVC2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.passwordInCaps(LoginTests.java:313)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordInCaps -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="6476" started-at="2018-10-04T14:00:03Z" finished-at="2018-10-04T14:00:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.passwordInCaps(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="passwordInCaps(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="passwordInCaps" duration-ms="58633" started-at="2018-10-04T14:00:09Z" data-provider="data" finished-at="2018-10-04T14:01:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HVAVC2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.passwordInCaps(LoginTests.java:313)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordInCaps -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="5934" started-at="2018-10-04T14:01:08Z" finished-at="2018-10-04T14:01:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.dismissKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="dismissKeyboard()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="dismissKeyboard" duration-ms="6666" started-at="2018-10-04T14:01:14Z" finished-at="2018-10-04T14:01:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.dismissKeyboard(LoginTests.java:333)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dismissKeyboard -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="7222" started-at="2018-10-04T14:01:20Z" finished-at="2018-10-04T14:01:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.dismissKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="dismissKeyboard()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="dismissKeyboard" duration-ms="5566" started-at="2018-10-04T14:01:27Z" finished-at="2018-10-04T14:01:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.LoginTests.dismissKeyboard(LoginTests.java:333)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dismissKeyboard -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="7208" started-at="2018-10-04T14:01:34Z" finished-at="2018-10-04T14:01:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.positiveLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="positiveLogin(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="positiveLogin" duration-ms="33099" started-at="2018-10-04T14:01:41Z" data-provider="data" finished-at="2018-10-04T14:02:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- positiveLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-10-04T14:02:14Z" finished-at="2018-10-04T14:02:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.checkLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkLogin()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="checkLogin" duration-ms="8085" started-at="2018-10-04T14:02:14Z" finished-at="2018-10-04T14:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="16760" started-at="2018-10-04T14:02:22Z" finished-at="2018-10-04T14:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.logOutUsernameCheck(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="logOutUsernameCheck(java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="logOutUsernameCheck" duration-ms="3132" started-at="2018-10-04T14:02:39Z" data-provider="data" finished-at="2018-10-04T14:02:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutUsernameCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="6857" started-at="2018-10-04T14:02:43Z" finished-at="2018-10-04T14:02:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.offlineLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineLogin(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="offlineLogin" duration-ms="64443" started-at="2018-10-04T14:02:50Z" data-provider="data" finished-at="2018-10-04T14:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineLogin -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="beforeTest" is-config="true" duration-ms="7244" started-at="2018-10-04T14:03:55Z" finished-at="2018-10-04T14:04:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.LoginTests.offlineLoginDiffUser(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineLoginDiffUser(java.lang.String, java.lang.String)[pri:0, instance:testModules.LoginTests@72ef8d15]" name="offlineLoginDiffUser" duration-ms="44945" started-at="2018-10-04T14:04:02Z" data-provider="data" finished-at="2018-10-04T14:04:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kiwitech3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hvavc3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineLoginDiffUser -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testModules.LoginTests@72ef8d15]" name="afterClass" is-config="true" duration-ms="42881" started-at="2018-10-04T14:04:47Z" finished-at="2018-10-04T14:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testModules.LoginTests -->
      <class name="testModules.HomeScreenTests">
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="4192" started-at="2018-10-04T14:05:30Z" finished-at="2018-10-04T14:05:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.checkHomeElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkHomeElements()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="checkHomeElements" duration-ms="6068" started-at="2018-10-04T14:05:34Z" finished-at="2018-10-04T14:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHomeElements -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="865" started-at="2018-10-04T14:05:40Z" finished-at="2018-10-04T14:05:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.propertiesInView()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="propertiesInView()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="propertiesInView" duration-ms="61995" started-at="2018-10-04T14:05:41Z" finished-at="2018-10-04T14:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertiesInView -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="909" started-at="2018-10-04T14:06:43Z" finished-at="2018-10-04T14:06:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.menuBtnCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="menuBtnCheck()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="menuBtnCheck" duration-ms="3706" started-at="2018-10-04T14:06:44Z" finished-at="2018-10-04T14:06:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.HomeScreenTests.menuBtnCheck(HomeScreenTests.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBtnCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="1325" started-at="2018-10-04T14:06:48Z" finished-at="2018-10-04T14:06:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.menuBtnCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="menuBtnCheck()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="menuBtnCheck" duration-ms="4875" started-at="2018-10-04T14:06:49Z" finished-at="2018-10-04T14:06:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.HomeScreenTests.menuBtnCheck(HomeScreenTests.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuBtnCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="917" started-at="2018-10-04T14:06:54Z" finished-at="2018-10-04T14:06:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.menuCloseOutside()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="menuCloseOutside()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="menuCloseOutside" duration-ms="7269" started-at="2018-10-04T14:06:55Z" finished-at="2018-10-04T14:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCloseOutside -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="889" started-at="2018-10-04T14:07:02Z" finished-at="2018-10-04T14:07:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.navDrawerScroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="navDrawerScroll()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="navDrawerScroll" duration-ms="54809" started-at="2018-10-04T14:07:03Z" finished-at="2018-10-04T14:07:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navDrawerScroll -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="2834" started-at="2018-10-04T14:07:58Z" finished-at="2018-10-04T14:08:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.navDrawerFolders()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="navDrawerFolders()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="navDrawerFolders" duration-ms="86191" started-at="2018-10-04T14:08:01Z" finished-at="2018-10-04T14:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navDrawerFolders -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="3737" started-at="2018-10-04T14:09:27Z" finished-at="2018-10-04T14:09:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.folderState()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="folderState()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="folderState" duration-ms="80132" started-at="2018-10-04T14:09:30Z" finished-at="2018-10-04T14:10:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- folderState -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="3987" started-at="2018-10-04T14:10:51Z" finished-at="2018-10-04T14:10:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.propertyPhases()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="propertyPhases()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="propertyPhases" duration-ms="28760" started-at="2018-10-04T14:10:55Z" finished-at="2018-10-04T14:11:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertyPhases -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="3378" started-at="2018-10-04T14:11:23Z" finished-at="2018-10-04T14:11:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.autoSelectedPhases()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="autoSelectedPhases()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="autoSelectedPhases" duration-ms="26887" started-at="2018-10-04T14:11:27Z" finished-at="2018-10-04T14:11:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- autoSelectedPhases -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="3166" started-at="2018-10-04T14:11:54Z" finished-at="2018-10-04T14:11:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.propertyPhasesNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="propertyPhasesNumber()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="propertyPhasesNumber" duration-ms="33539" started-at="2018-10-04T14:11:57Z" finished-at="2018-10-04T14:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- propertyPhasesNumber -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="4120" started-at="2018-10-04T14:12:30Z" finished-at="2018-10-04T14:12:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.filterOnProperty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="filterOnProperty()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="filterOnProperty" duration-ms="218391" started-at="2018-10-04T14:12:34Z" finished-at="2018-10-04T14:16:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterOnProperty -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="3807" started-at="2018-10-04T14:16:13Z" finished-at="2018-10-04T14:16:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.loanPhases()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loanPhases()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="loanPhases" duration-ms="46605" started-at="2018-10-04T14:16:17Z" finished-at="2018-10-04T14:17:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanPhases -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="3911" started-at="2018-10-04T14:17:03Z" finished-at="2018-10-04T14:17:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.filterOnLoan()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="filterOnLoan()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="filterOnLoan" duration-ms="92583" started-at="2018-10-04T14:17:07Z" finished-at="2018-10-04T14:18:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterOnLoan -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="4023" started-at="2018-10-04T14:18:40Z" finished-at="2018-10-04T14:18:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.dateAdded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="dateAdded()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="dateAdded" duration-ms="38204" started-at="2018-10-04T14:18:44Z" finished-at="2018-10-04T14:19:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateAdded -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="4543" started-at="2018-10-04T14:19:22Z" finished-at="2018-10-04T14:19:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.oneFilterOnly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="oneFilterOnly()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="oneFilterOnly" duration-ms="38283" started-at="2018-10-04T14:19:27Z" finished-at="2018-10-04T14:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oneFilterOnly -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="987" started-at="2018-10-04T14:20:05Z" finished-at="2018-10-04T14:20:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.team()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="team()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="team" duration-ms="49073" started-at="2018-10-04T14:20:06Z" finished-at="2018-10-04T14:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- team -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="944" started-at="2018-10-04T14:20:55Z" finished-at="2018-10-04T14:20:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.closeAndOpenCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="closeAndOpenCheck()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="closeAndOpenCheck" duration-ms="152558" started-at="2018-10-04T14:20:56Z" finished-at="2018-10-04T14:23:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAndOpenCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="4658" started-at="2018-10-04T14:23:28Z" finished-at="2018-10-04T14:23:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.settingsHeader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="settingsHeader()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="settingsHeader" duration-ms="71229" started-at="2018-10-04T14:23:33Z" finished-at="2018-10-04T14:24:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- settingsHeader -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="beforeTest" is-config="true" duration-ms="5584" started-at="2018-10-04T14:24:44Z" finished-at="2018-10-04T14:24:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.HomeScreenTests.logOut()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="logOut()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="logOut" duration-ms="27001" started-at="2018-10-04T14:24:50Z" finished-at="2018-10-04T14:25:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOut -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testModules.HomeScreenTests@6aa8e115]" name="afterClass" is-config="true" duration-ms="48022" started-at="2018-10-04T14:25:17Z" finished-at="2018-10-04T14:26:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testModules.HomeScreenTests -->
      <class name="testModules.Property_HouseDetailsTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeClass" is-config="true" duration-ms="19780" started-at="2018-10-04T14:39:50Z" finished-at="2018-10-04T14:40:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-10-04T14:40:10Z" finished-at="2018-10-04T14:40:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.projectNameOnTop(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="projectNameOnTop(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="projectNameOnTop" duration-ms="580" started-at="2018-10-04T14:40:10Z" data-provider="data" finished-at="2018-10-04T14:40:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Project 1925 Pensione Pl]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- projectNameOnTop -->
        <test-method status="SKIP" signature="houseDetailsBtn()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="houseDetailsBtn" duration-ms="16029" started-at="2018-10-04T14:40:11Z" finished-at="2018-10-04T14:40:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.Property_HouseDetailsTest.houseDetailsBtn(Property_HouseDetailsTest.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDetailsBtn -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-10-04T14:40:11Z" finished-at="2018-10-04T14:40:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDetailsBtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-10-04T14:40:27Z" finished-at="2018-10-04T14:40:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDetailsBtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDetailsBtn()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="houseDetailsBtn" duration-ms="5946" started-at="2018-10-04T14:40:27Z" finished-at="2018-10-04T14:40:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDetailsBtn -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="17320" started-at="2018-10-04T14:40:33Z" finished-at="2018-10-04T14:40:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDetailsSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDetailsSelection()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="houseDetailsSelection" duration-ms="6360" started-at="2018-10-04T14:40:50Z" finished-at="2018-10-04T14:40:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDetailsSelection -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="17611" started-at="2018-10-04T14:40:56Z" finished-at="2018-10-04T14:41:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDetailsCell()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDetailsCell()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="houseDetailsCell" duration-ms="4089" started-at="2018-10-04T14:41:14Z" finished-at="2018-10-04T14:41:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDetailsCell -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9898" started-at="2018-10-04T14:41:18Z" finished-at="2018-10-04T14:41:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.screenSections()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="screenSections()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="screenSections" duration-ms="24129" started-at="2018-10-04T14:41:28Z" finished-at="2018-10-04T14:41:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenSections -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="19671" started-at="2018-10-04T14:41:52Z" finished-at="2018-10-04T14:42:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.checkZillowField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkZillowField()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="checkZillowField" duration-ms="33892" started-at="2018-10-04T14:42:12Z" finished-at="2018-10-04T14:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkZillowField -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="20203" started-at="2018-10-04T14:42:46Z" finished-at="2018-10-04T14:43:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDetailsCheckmark()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDetailsCheckmark()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="houseDetailsCheckmark" duration-ms="23929" started-at="2018-10-04T14:43:06Z" finished-at="2018-10-04T14:43:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDetailsCheckmark -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="12446" started-at="2018-10-04T14:43:30Z" finished-at="2018-10-04T14:43:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.zillowText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="zillowText()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="zillowText" duration-ms="1978" started-at="2018-10-04T14:43:42Z" finished-at="2018-10-04T14:43:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zillowText -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9939" started-at="2018-10-04T14:43:44Z" finished-at="2018-10-04T14:43:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.zillowLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="zillowLogo()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="zillowLogo" duration-ms="24185" started-at="2018-10-04T14:43:54Z" finished-at="2018-10-04T14:44:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zillowLogo -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="20055" started-at="2018-10-04T14:44:18Z" finished-at="2018-10-04T14:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.clickableLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="clickableLogo()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="clickableLogo" duration-ms="55988" started-at="2018-10-04T14:44:39Z" finished-at="2018-10-04T14:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickableLogo -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="17918" started-at="2018-10-04T14:45:35Z" finished-at="2018-10-04T14:45:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.offlineBrandingCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="offlineBrandingCheck()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="offlineBrandingCheck" duration-ms="46093" started-at="2018-10-04T14:45:52Z" finished-at="2018-10-04T14:46:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offlineBrandingCheck -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="17919" started-at="2018-10-04T14:46:39Z" finished-at="2018-10-04T14:46:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addressUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addressUpdate(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="addressUpdate" duration-ms="142856" started-at="2018-10-04T14:46:57Z" data-provider="data" finished-at="2018-10-04T14:49:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[97 Madison Ave]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Island Park]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NY]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11558]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addressUpdate -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="19113" started-at="2018-10-04T14:49:21Z" finished-at="2018-10-04T14:49:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.editZillowFields(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="editZillowFields(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="editZillowFields" duration-ms="99375" started-at="2018-10-04T14:49:40Z" data-provider="data" finished-at="2018-10-04T14:51:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1936]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editZillowFields -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9866" started-at="2018-10-04T14:51:20Z" finished-at="2018-10-04T14:51:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addOnField(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addOnField(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="addOnField" duration-ms="12655" started-at="2018-10-04T14:51:30Z" data-provider="data" finished-at="2018-10-04T14:51:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOnField -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9897" started-at="2018-10-04T14:51:45Z" finished-at="2018-10-04T14:51:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addOnDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addOnDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="addOnDropDown" duration-ms="11818" started-at="2018-10-04T14:51:54Z" data-provider="data" finished-at="2018-10-04T14:52:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOnDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="10236" started-at="2018-10-04T14:52:07Z" finished-at="2018-10-04T14:52:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.homeStyleDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="homeStyleDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="homeStyleDropDown" duration-ms="16219" started-at="2018-10-04T14:52:17Z" data-provider="data" finished-at="2018-10-04T14:52:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeStyleDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9878" started-at="2018-10-04T14:52:34Z" finished-at="2018-10-04T14:52:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.exteriorStyleDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="exteriorStyleDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="exteriorStyleDropDown" duration-ms="22869" started-at="2018-10-04T14:52:44Z" data-provider="data" finished-at="2018-10-04T14:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exteriorStyleDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="10590" started-at="2018-10-04T14:53:07Z" finished-at="2018-10-04T14:53:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.garageSizeDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="garageSizeDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="garageSizeDropDown" duration-ms="13134" started-at="2018-10-04T14:53:18Z" data-provider="data" finished-at="2018-10-04T14:53:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- garageSizeDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9847" started-at="2018-10-04T14:53:31Z" finished-at="2018-10-04T14:53:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.tapGarageCheckBox(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="tapGarageCheckBox(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="tapGarageCheckBox" duration-ms="3671" started-at="2018-10-04T14:53:41Z" data-provider="data" finished-at="2018-10-04T14:53:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[yes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tapGarageCheckBox -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="10029" started-at="2018-10-04T14:53:47Z" finished-at="2018-10-04T14:53:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.garageConversionField(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="garageConversionField(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="garageConversionField" duration-ms="16208" started-at="2018-10-04T14:53:57Z" data-provider="data" finished-at="2018-10-04T14:54:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- garageConversionField -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="13351" started-at="2018-10-04T14:54:14Z" finished-at="2018-10-04T14:54:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.garageConversionDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="garageConversionDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="garageConversionDropDown" duration-ms="13736" started-at="2018-10-04T14:54:27Z" data-provider="data" finished-at="2018-10-04T14:54:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- garageConversionDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9828" started-at="2018-10-04T14:54:41Z" finished-at="2018-10-04T14:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.acDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="acDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="acDropDown" duration-ms="12370" started-at="2018-10-04T14:54:51Z" data-provider="data" finished-at="2018-10-04T14:55:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="10270" started-at="2018-10-04T14:55:04Z" finished-at="2018-10-04T14:55:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.poolDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="poolDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="poolDropDown" duration-ms="14563" started-at="2018-10-04T14:55:14Z" data-provider="data" finished-at="2018-10-04T14:55:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- poolDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9726" started-at="2018-10-04T14:55:29Z" finished-at="2018-10-04T14:55:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.hotTub(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="hotTub(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="hotTub" duration-ms="14328" started-at="2018-10-04T14:55:39Z" data-provider="data" finished-at="2018-10-04T14:55:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotTub -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9967" started-at="2018-10-04T14:55:54Z" finished-at="2018-10-04T14:56:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.storageBuildingField(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="storageBuildingField(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="storageBuildingField" duration-ms="14808" started-at="2018-10-04T14:56:04Z" data-provider="data" finished-at="2018-10-04T14:56:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storageBuildingField -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="19675" started-at="2018-10-04T14:56:19Z" finished-at="2018-10-04T14:56:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.storageBuildingDropDown(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="storageBuildingDropDown(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="storageBuildingDropDown" duration-ms="29080" started-at="2018-10-04T14:56:39Z" data-provider="data" finished-at="2018-10-04T14:57:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storageBuildingDropDown -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="10188" started-at="2018-10-04T14:57:09Z" finished-at="2018-10-04T14:57:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.houseDimensions(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="houseDimensions(java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="houseDimensions" duration-ms="45781" started-at="2018-10-04T14:57:19Z" data-provider="data" finished-at="2018-10-04T14:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- houseDimensions -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="13752" started-at="2018-10-04T14:58:05Z" finished-at="2018-10-04T14:58:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addFeature()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addFeature()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="addFeature" duration-ms="27611" started-at="2018-10-04T14:58:18Z" finished-at="2018-10-04T14:58:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFeature -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="10382" started-at="2018-10-04T14:58:47Z" finished-at="2018-10-04T14:58:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addingDataInAmenities(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="addingDataInAmenities(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="addingDataInAmenities" duration-ms="11587" started-at="2018-10-04T14:58:57Z" data-provider="data" finished-at="2018-10-04T14:59:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TRIAL 1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at testModules.Property_HouseDetailsTest.addingDataInAmenities(Property_HouseDetailsTest.java:613)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addingDataInAmenities -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="10003" started-at="2018-10-04T14:59:09Z" finished-at="2018-10-04T14:59:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.addingDataInAmenities(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addingDataInAmenities(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="addingDataInAmenities" duration-ms="58121" started-at="2018-10-04T14:59:19Z" data-provider="data" finished-at="2018-10-04T15:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TRIAL 1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addingDataInAmenities -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="10831" started-at="2018-10-04T15:00:18Z" finished-at="2018-10-04T15:00:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.deleteAmenities(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="deleteAmenities(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="deleteAmenities" duration-ms="38577" started-at="2018-10-04T15:00:29Z" data-provider="data" finished-at="2018-10-04T15:01:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAmenities -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="13090" started-at="2018-10-04T15:01:08Z" finished-at="2018-10-04T15:01:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.selectPricingProfile(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="selectPricingProfile(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="selectPricingProfile" duration-ms="28477" started-at="2018-10-04T15:01:21Z" data-provider="data" finished-at="2018-10-04T15:01:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPricingProfile -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9750" started-at="2018-10-04T15:01:49Z" finished-at="2018-10-04T15:01:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.safeSize()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="safeSize()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="safeSize" duration-ms="6405" started-at="2018-10-04T15:01:59Z" finished-at="2018-10-04T15:02:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- safeSize -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="13054" started-at="2018-10-04T15:02:06Z" finished-at="2018-10-04T15:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.safeSizeInfo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="safeSizeInfo()[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="safeSizeInfo" duration-ms="4521" started-at="2018-10-04T15:02:19Z" finished-at="2018-10-04T15:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- safeSizeInfo -->
        <test-method status="PASS" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="beforeTest" is-config="true" duration-ms="9923" started-at="2018-10-04T15:02:24Z" finished-at="2018-10-04T15:02:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testModules.Property_HouseDetailsTest.notesHouseDetails(java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="notesHouseDetails(java.lang.String)[pri:0, instance:testModules.Property_HouseDetailsTest@51a9ad5e]" name="notesHouseDetails" duration-ms="23138" started-at="2018-10-04T15:02:34Z" data-provider="data" finished-at="2018-10-04T15:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A pangram, or holoalphabetic sentence, is a sentence that contains every letter of the alphabet at least once. The most famous pangram is probably the thirty-five-letter-long “The quick brown fox jumps over the lazy dog,” which has been used to test typing equipment since at least the late 1800s.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notesHouseDetails -->
      </class> <!-- testModules.Property_HouseDetailsTest -->
      <class name="testModules.New_PropertyTests">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="beforeClass" is-config="true" duration-ms="41144" started-at="2018-10-04T14:26:05Z" finished-at="2018-10-04T14:26:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="newPropertyBtn()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="newPropertyBtn" duration-ms="9039" started-at="2018-10-04T14:26:46Z" finished-at="2018-10-04T14:26:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newPropertyBtn -->
        <test-method status="PASS" signature="newPropertyCheck()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="newPropertyCheck" duration-ms="23093" started-at="2018-10-04T14:26:55Z" finished-at="2018-10-04T14:27:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newPropertyCheck -->
        <test-method status="PASS" signature="tapPropertyOne()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="tapPropertyOne" duration-ms="13450" started-at="2018-10-04T14:27:18Z" finished-at="2018-10-04T14:27:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tapPropertyOne -->
        <test-method status="PASS" signature="sellerPage()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="sellerPage" duration-ms="78184" started-at="2018-10-04T14:27:32Z" finished-at="2018-10-04T14:28:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sellerPage -->
        <test-method status="PASS" signature="defaultPhase()[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="defaultPhase" duration-ms="35391" started-at="2018-10-04T14:28:50Z" finished-at="2018-10-04T14:29:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultPhase -->
        <test-method status="PASS" signature="charLimit(java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="charLimit" duration-ms="100847" started-at="2018-10-04T14:29:26Z" data-provider="data" finished-at="2018-10-04T14:31:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[It  doesn’t  matter  what  type  of  ugly  home  you  have, HomeVestors  would  like  to  make  a  no  obligation  cash  offer  to purchase your home for cash. ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charLimit -->
        <test-method status="PASS" signature="fillingSeller(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="fillingSeller" duration-ms="188608" started-at="2018-10-04T14:31:07Z" data-provider="data" finished-at="2018-10-04T14:34:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Project]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Alfred]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Morrison]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1925 Pensione Pl]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Wenatchee]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[WA]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[98801.0]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[7.183954794E9]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[johncater@hva.com]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Enjoy this home located in Western Heights.Close to schools and downtown.This 4 bedroom, 2 bath has great floor plan ready for your personal touch to decorate.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingSeller -->
        <test-method status="PASS" signature="wrongEmail(java.lang.String)[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="wrongEmail" duration-ms="78799" started-at="2018-10-04T14:34:16Z" data-provider="data" finished-at="2018-10-04T14:35:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sasfdsgsgs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongEmail -->
        <test-method status="PASS" signature="wrongState(java.lang.String)[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="wrongState" duration-ms="60770" started-at="2018-10-04T14:35:35Z" data-provider="data" finished-at="2018-10-04T14:36:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongState -->
        <test-method status="PASS" signature="editingSeller(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="editingSeller" duration-ms="91985" started-at="2018-10-04T14:36:37Z" data-provider="data" finished-at="2018-10-04T14:38:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 1925 Pensione Pl]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[WA]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[9.836663366E9]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[alfred_morrison@hva.com]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editingSeller -->
        <test-method status="PASS" signature="tileCheck(java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="tileCheck" duration-ms="26152" started-at="2018-10-04T14:38:09Z" data-provider="data" finished-at="2018-10-04T14:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Project 1925 Pensione Pl]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1925 Pensione Pl Wenatchee, WA 98801]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tileCheck -->
        <test-method status="PASS" signature="redBell(java.lang.String, java.lang.String)[pri:0, instance:testModules.New_PropertyTests@5e21e98f]" name="redBell" duration-ms="73975" started-at="2018-10-04T14:38:36Z" data-provider="data" finished-at="2018-10-04T14:39:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20596923-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$102.70]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redBell -->
      </class> <!-- testModules.New_PropertyTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
